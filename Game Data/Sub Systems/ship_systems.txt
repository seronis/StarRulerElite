//Keyword: specifies an entry for the current system
//If the keyword isn't an internal keyword, it's treated as a special variable that can be accessed by scripts
//	Note: When the keyword is a user-defined type as above, it must be a valid formula

//Average density is 50 per size unit


System: BackupPower
	Name: #SS_BACKUPPOWER_NAME
	Description: #SS_BACKUPPOWER_DESC
	Appearance: NuclearReactor
	Explosion: subsys_powerexplode lasting 0.35
	
	Tags: Link
	Tied To: EnergyPhysics 1

	Available: Techs.EnergyPhysics.Level > 0
	Level: Techs.EnergyPhysics.Level
	Size: Scale
	HPLevel: Techs.Materials.Level-1 As Level
	Durability: HEALTH_MULT * 50 * Size * pow(HEALTH_CURVE,HPLevel)
	Mass: 50 * Size

	Costs: Metals[100 * Size], Electronics[50 * Size], AdvParts[5 * Size], Labr[5 * Size]
	Complexity: 0.4
	
	Alters: subSysAlterations::reducePowerNeeds[Size * 40 * (2 - decay(pow(LEVEL_GAIN_CURVE,Level), 50))]

	Requires:
		To Run: Control[2 * Size]
		
	Hints: Local/BackupPower[Size * 40 * (2 - decay(pow(LEVEL_GAIN_CURVE, Level), 50))]


System: Capacitor
	Name: #SS_CAPACITOR_NAME
	Description: #SS_CAPACITOR_DESC
	Appearance: Capacitor
	Explosion: electrical_spark lasting 0.25
	
	Tags: Support, Storage:Power
	Tied To: EnergyPhysics 1

	Available: Techs.EnergyPhysics.Level > 0
	Level: Techs.EnergyPhysics.Level
	Size: Scale
	HPLevel: Techs.Materials.Level-1 As Level
	Durability: HEALTH_MULT * 50 * Size * pow(HEALTH_CURVE,HPLevel)
	Mass: 50 * Size
	
	Costs: Metals[150 * Size], Labr[2 * Size]
	Complexity: 0.4
	
	Tick Rate: 1
	
	vCharge: Size * 500 * (2 - decay(pow(LEVEL_GAIN_CURVE,Level), 40))
	
	Provides: Capacitance with
		Amount[vCharge]
	
	Hints: Charge[vCharge]

System: QuantumBattery
	Name: #SS_ZPM_NAME
	Description: #SS_ZPM_DESC
	Appearance: Capacitor
	Explosion: electrical_spark lasting 2
	
	Tags: Support, Storage:Power
	Tied To: EnergyPhysics 18, WarpPhysics 16

	Available: ((Techs.EnergyPhysics.Level >= 18) && (Techs.WarpPhysics.Level >= 16)) || Traits.remnants
	Level: max(floor(weight(Techs.WarpPhysics.Level - 15, 0.5, Techs.EnergyPhysics.Level - 17, 0.5)), 1)
	Size: Scale
	HPLevel: Techs.Materials.Level-1 As Level
	Durability: HEALTH_MULT * 60 * Size * pow(HEALTH_CURVE,HPLevel)
	Mass: 40 * Size
	
	Costs: Metals[50 * Size], Electronics[60 * Size], AdvParts[80 * Size], Labr[2 * Size]
	
	Tick Rate: 1
	vCharge: Size * 80000 * (2 - decay(pow(LEVEL_GAIN_CURVE,Level), 40))
	
	Provides: Capacitance with
		Amount[vCharge]

	Requires:
		To Run:
			Control[20 * Size]
	
	Hints: Charge[vCharge]


System: FuelCell
	Name: #SS_FUELCELL_NAME
	Description: #SS_FUELCELL_DESC
	Appearance: FuelCell
	Explosion: fuel_cell_explode lasting 0.7
	
	Tags: Support, Storage, Storage:Fuel
	Tied To: ShipSystems 1, EnergyPhysics 1

	Available: (Techs.ShipSystems.Level > 0) && (Techs.EnergyPhysics.Level > 0)
	Level: floor((Techs.ShipSystems.Level + Techs.EnergyPhysics.Level) / 1.5)
	Size: Scale
	HPLevel: Techs.Materials.Level-1 As Level
	Durability: HEALTH_MULT * 35 * Size * pow(HEALTH_CURVE,HPLevel)
	Mass: 15 * Size
	
	Costs: Metals[150 * Size], Labr[5 * Size]
	Complexity: 0.4
	
	Tick Rate: 1
	
	vFuelStore: Size * 200 * (4 - decay(pow(LEVEL_GAIN_CURVE, Level), 25) - decay(pow(LEVEL_GAIN_CURVE, Level), 125) - decay(pow(LEVEL_GAIN_CURVE, Level), 625))
	
	Provides: FuelStorage with
		Amount[vFuelStore]
		
	Hints: Fuel[vFuelStore]


System: AmmoStorage
	Name: #SS_AMMOCACHE_NAME
	Description: #SS_AMMOCACHE_DESC
	Appearance: Ammocache
	Explosion: fuel_cell_explode lasting 1.2

	Tags: Storage, Storage:Ammo
	Tied To: ShipSystems 1, Cargo 1

	Available: (Techs.ShipSystems.Level > 0) && (Techs.Cargo.Level > 0)
	Level: ceil((Techs.ShipSystems.Level + Techs.Cargo.Level) / 1.5)
	Size: Scale
	HPLevel: Techs.Materials.Level-1 As Level
	Durability: HEALTH_MULT * 60 * Size * pow(HEALTH_CURVE,HPLevel)
	Mass: 50 * Size
	
	Costs: Metals[200 * Size], Labr[2 * Size]
	Complexity: 0.4
	
	Tick Rate: 1
	
	vAmmoStore: Size * 125 * (4 - decay(pow(LEVEL_GAIN_CURVE, Level), 25) - decay(pow(LEVEL_GAIN_CURVE, Level), 125) - decay(pow(LEVEL_GAIN_CURVE, Level), 625))
	
	Provides: AmmoStorage with
		Amount[vAmmoStore]
		
	Hints: Ammo[vAmmoStore]


System: CargoBay
	Name: #SS_CARGOBAY_NAME
	Description: #SS_CARGOBAY_DESC
	Appearance: Storage
	Explosion: vent_gas lasting 1
	
	Tags: CargoBay, Storage, Storage:Cargo, Storage:Resources
	Tied To: Cargo 1
	
	Available: Techs.Cargo.Level > 0
	Level: floor(Techs.ShipSystems.Level/3) + Techs.Cargo.Level
	Size: Scale
	HPLevel: Techs.Materials.Level-1 As Level
	Durability: HEALTH_MULT * 20 * Size * pow(HEALTH_CURVE,HPLevel)
	Mass: 15 * Size

	Costs: Metals[100 * Size], Labr[2 * Size]
	Complexity: 0.2
	
	Tick Rate: 1

	vCargoStore: Size * 60 * (4 - decay(pow(LEVEL_GAIN_CURVE, Level), 25) - decay(pow(LEVEL_GAIN_CURVE, Level), 125) - decay(pow(LEVEL_GAIN_CURVE, Level), 625))
	
	Provides: Cargo with
		Amount[vCargoStore]

	Hints: Cargo[vCargoStore]


System: Refinery
	Name: #SS_REFINERY_NAME
	Description: #SS_REFINERY_DESC
	Appearance: MetFab
	Explosion: armor_explode lasting 0.5

	Tags: Deposit:Metals
	Tied To: Metallurgy 6
	
	Available: Techs.Metallurgy.Level > 5
	Level: Techs.Metallurgy.Level
	Size: Scale
	HPLevel: Techs.Materials.Level-1 As Level
	Durability: HEALTH_MULT * 30 * Size * pow(HEALTH_CURVE,HPLevel)
	Mass: 15 * Size

	Costs: Metals[80 * Size], Labr[10 * Size]
	
	Tick Rate: 4

	vCargoStore: Size * 10
	vRate: Size * 4 * (pow(LEVEL_GAIN_CURVE, Level) + RES_BASE_FACT) * RES_GEN_MULT
	
	Provides: Cargo with
		Amount[vCargoStore]

	Provides: RefineMetal with
		Rate[vRate], OreCostPer[1]

	Consumes:
		To Run: Power[10 * Size]

	Requires:
		To Run: Control[10 * Size]

	Hints: Cargo[vCargoStore], Local/RefineRate[vRate]

System: ElectsFab
	Name: #SS_ELECTSFAB_NAME
	Description: #SS_ELECTSFAB_DESC
	Appearance: ElecFab
	Explosion: armor_explode lasting 0.5
	
	Tags: Deposit:Electronics
	Tied To: Metallurgy 8, Computers 6
	
	Available: (Techs.Metallurgy.Level >= 8) && (Techs.Computers.Level >= 6)
	Level: floor(weight(Techs.Metallurgy.Level, 0.7, Techs.Computers.Level, 0.3))
	Size: Scale
	HPLevel: Techs.Materials.Level-1 As Level
	Durability: HEALTH_MULT * 30 * Size * pow(HEALTH_CURVE,HPLevel)
	Mass: 15 * Size

	Costs: Metals[80 * Size], Electronics[60 * Size], Labr[15 * Size]
	
	Tick Rate: 4

	vCargoStore: Size * 10
	vRate: Size * 2 * (pow(LEVEL_GAIN_CURVE, Level) + RES_BASE_FACT) * RES_GEN_MULT
	
	Provides: Cargo with
		Amount[vCargoStore]

	Provides: FabElects with
		Rate[vRate], MtlCostPer[1]

	Consumes:
		To Run: Power[10 * Size]

	Requires:
		To Run: Control[5 * Size]

	Hints: Cargo[vCargoStore], Local/ElectsFabRate[vRate]

System: AdvAssembler
	Name: #SS_ADVFAB_NAME
	Description: #SS_ADVFAB_DESC
	Appearance: AdvFab
	Explosion: armor_explode lasting 0.5
	
	Tags: Deposit:AdvParts
	Tied To: Metallurgy 10, Computers 8, Nanotech 6
	
	Available: (Techs.Metallurgy.Level >= 10) && (Techs.Computers.Level >= 8) && (Techs.Nanotech.Level >= 6)
	Level: floor(weight(Techs.Metallurgy.Level, 0.5, Techs.Computers.Level, 0.2, Techs.Nanotech.Level, 0.3))
	Size: Scale
	HPLevel: Techs.Materials.Level-1 As Level
	Durability: HEALTH_MULT * 30 * Size * pow(HEALTH_CURVE,HPLevel)
	Mass: 15 * Size

	Costs: Electronics[60 * Size], AdvParts[60 * Size]
	
	Tick Rate: 4

	vCargoStore: Size * 10
	vRate: Size * 1 * (pow(LEVEL_GAIN_CURVE, Level) + RES_BASE_FACT) * RES_GEN_MULT
	
	Provides: Cargo with
		Amount[vCargoStore]

	Provides: FabAdvParts with
		Rate[vRate], MtlCostPer[1], ElcCostPer[1]

	Consumes:
		To Run: Power[10 * Size]

	Hints: Cargo[vCargoStore], Local/AdvFabRate[vRate]

System: Exporter
	Name: #SS_EXPORTER_NAME
	Description: #SS_EXPORTER_DESC

	Appearance: MetFab
	Explosion: armor_explode lasting 0.5
	
	Tied To: Economics 6
	Tags: BankAccess
	
	Available: (Techs.Economics.Level > 5) && not(Traits.no_bank)
	Level: Techs.Economics.Level - 5
	Size: Scale
	HPLevel: Techs.Materials.Level-1 As Level
	Durability: HEALTH_MULT * 30 * Size * pow(HEALTH_CURVE,HPLevel)
	Mass: 15 * Size

	Costs: Metals[80 * Size], Labr[10 * Size]
	
	Tick Rate: 4

	vCargoStore: Size * 10
	vRate: Size * 2 * pow(LEVEL_GAIN_CURVE, Level) * TRADE_RATE_MULT
	
	Provides: Cargo with
		Amount[vCargoStore]

	// Resource per tick is randomized, so we need to multiply the
	// rate by 3 to get that actual export rate for each resource.
	Provides: BankExport with Amount[vRate * 3]

	Requires:
		To Run: Control[10 * Size]

	Hints: Cargo[vCargoStore], Local/BankExport[vRate]



System: ShipBay
	Name: #SS_SHIPBAY_NAME
	Description: #SS_SHIPBAY_DESC
	Appearance: ShipBay
	Explosion: armor_explode lasting 0.75
	
	Tags: ShipBay
	Tied To: ShipConstruction 1
	
	Available: Techs.ShipConstruction.Level > 0
	Level: floor(Techs.Cargo.Level/5) + Techs.ShipConstruction.Level
	Size: Scale
	HPLevel: Techs.Materials.Level-1 As Level
	Durability: HEALTH_MULT * 5 * Size * pow(HEALTH_CURVE,HPLevel)
	Mass: 5 * Size

	Costs: Metals[20 * Size], Electronics[5 * Size], AdvParts[1 * Size], Labr[5 * Size]
	Complexity: 0.2
	
	Tick Rate: 1

	vShipBay: Size * (1 / 32) * (2 - decay(pow(LEVEL_GAIN_CURVE,Level), 12)) //A ship made of only ship bays can store a slightly smaller ship than itself at max tech
	
	Provides: ShipStorage with
		Amount[vShipBay]

	Hints: ShipBay[vShipBay] //Divide by space taken by a scale 1 ship

System: ConstructionBay
	Name: #SS_BUILDBAY_NAME
	Description: #SS_BUILDBAY_DESC
	Appearance: ConstructionBay
	Explosion: armor_explode lasting 0.5
	
	Tags: BuildBay, BuildsShips, PostOrder:Fetch:Metals:0.3, PostOrder:Fetch:Electronics:0.3, PostOrder:Fetch:AdvParts:0.3, Storage:Resources
	Tied To: ShipConstruction 1
	
	Available: Techs.ShipConstruction.Level > 0
	Level: floor(Techs.Cargo.Level/5) + Techs.ShipConstruction.Level
	Size: Scale
	HPLevel: Techs.Materials.Level-1 As Level
	Durability: HEALTH_MULT * 10 * Size * pow(HEALTH_CURVE,HPLevel)
	Mass: 5 * Size

	Costs: Metals[20 * Size], Electronics[5 * Size], AdvParts[1 * Size], Labr[5 * Size]
	Complexity: 0.2
	
	Tick Rate: 1

	vEcoStore: Size * 40 * (4 - decay(pow(LEVEL_GAIN_CURVE, Level), 25) - decay(pow(LEVEL_GAIN_CURVE, Level), 125) - decay(pow(LEVEL_GAIN_CURVE, Level), 625))
	
	Provides: AdvPartsStorage with
		Amount[vEcoStore * 0.2]
	
	Provides: ElecStorage with
		Amount[vEcoStore * 0.3]
	
	Provides: MetalStorage with
		Amount[vEcoStore * 0.5]

	Provides: AutoLabor with
		Rate[Size * 2 * pow(LEVEL_GAIN_CURVE, Level)], Store[Size * 10 * (2 - decay(pow(LEVEL_GAIN_CURVE,Level),45))]

	Hints: EcoStore[vEcoStore]




System: QuantumComputer
	Name: #SS_QUANTUMCOMP_NAME
	Description: #SS_QUANTUMCOMP_DESC
	Appearance: QuantumComputerCore
	Explosion: electrical_spark lasting 0.25
	
	Tags: Link
	Tied To: Computers 5, Science 2

	Available: (((Techs.Computers.Level >= 5) && (Techs.Science.Level > 1)) || Traits.remnants) && not(Traits.no_computers)
	Level: ceil((Techs.Computers.Level - 4) / 2)
	Size: Scale
	HPLevel: Techs.Materials.Level-1 As Level
	Durability: HEALTH_MULT * 15 * Size * pow(HEALTH_CURVE,HPLevel)
	Mass: 75 * Size

	Costs: Metals[50 * Size], Electronics[600 * Size], AdvParts[200 * Size], Labr[5 * Size]
	Complexity: 10
	
	Tick Rate: 1

	Alters: subSysAlterations::reduceControlReq[Size * 150 * (2 - decay(pow(LEVEL_GAIN_CURVE, Level),50))]

	Consumes:
		To Run: Power[10 * Size]
		
	Hints: Local/ReduceControl[Size * 150 * (2 - decay(pow(LEVEL_GAIN_CURVE, Level),50))]


System: QuantumCompressor
	Name: #SS_SPACESAVER_NAME
	Description: #SS_SPACESAVER_DESC
	Appearance: QuantumCompressor
	Explosion: electrical_spark lasting 0.25
	
	Tags: Link
	Tied To: Cargo 3, WarpPhysics 3

	Available: (Techs.Cargo.Level > 2) && (Techs.WarpPhysics.Level > 2)
	Level: floor(weight(Techs.Cargo.Level - 2, 0.25, Techs.WarpPhysics.Level - 2, 0.75))
	Size: Scale
	HPLevel: Techs.Materials.Level-1 As Level
	Durability: HEALTH_MULT * 15 * Size * pow(HEALTH_CURVE,HPLevel)
	Mass: 50 * Size

	Costs: Metals[50 * Size], Electronics[50 * Size], AdvParts[180 * Size], Labr[5 * Size]
	Complexity: 10
	
	Tick Rate: 1

	Alters: subSysAlterations::increaseCargoSpace[Size][2 / decay(pow(LEVEL_GAIN_CURVE,Level),30)]

	Consumes:
		To Run: Power[25 * Size]
		
	Hints: Local/IncreaseSpace[2 / decay(pow(LEVEL_GAIN_CURVE,Level),30)]


System: Colonizer
	Name: #SS_COLONIZER_NAME
	Description: #SS_COLONIZER_DESC
	Appearance: ColonyModule	
	Explosion: armor_explode lasting 0.25

	Tags: Colonizer, Tool, Tool:Colonizer, Order:Colonize
	Tied To: ShipSystems 1
	
	Available: Techs.ShipSystems.Level > 0
	Level: Techs.ShipSystems.Level
	Size: max(Scale,15)
	HPLevel: Techs.Materials.Level-1 As Level
	Durability: HEALTH_MULT * 100 * Size * pow(HEALTH_CURVE,HPLevel)
	Mass: 80 * Size
	
	Costs: Metals[50 * Size], Electronics[12 * Size], AdvParts[12 * Size]
	Complexity: 1.5
	
	Tick Rate: 4
	
	Provides: TakePlanet
	Provides: MakeStructures with Amount[Size / 15]

	Consumes:
		To Run: Air[5 * Size * 0.99]
	
	Hints: Local/AddStructs[floor(Size / 15)], Colony Size[(floor(Size / 15)]


System: Salvager
	Name: #SS_SALVAGER_NAME
	Description: #SS_SALVAGER_DESC
	Appearance: Salvager
	Explosion: electrical_spark lasting 0.25
	
	Tags: Salvager, Tool, Work:Salvager, Tool:Salvager, Deposit:Metals, TimedReload
	Tied To: Materials 2
	
	Available: Techs.Materials.Level > 1
	Level: Techs.Materials.Level
	Size: Scale
	HPLevel: Techs.Materials.Level-1 As Level
	Durability: HEALTH_MULT * 100 * Size * pow(HEALTH_CURVE,HPLevel)
	Mass: 80 * Size
	
	Costs: Metals[50 * Size], Electronics[50 * Size], AdvParts[75 * Size]
	Complexity: 2.5
	
	Tick Rate: 10
	
	Provides: Salvager with Rate[Size * 10 * pow(LEVEL_GAIN_CURVE, Level)], Factor[1 - (0.75 * decay(pow(LEVEL_GAIN_CURVE,Level), 12))], Delay[10], Duration[5]

	Requires:
		To Run:
			Control[10 * Size]

	Hints: Salvage[(Size * 10 * pow(LEVEL_GAIN_CURVE, Level) * 5)/10]


System: Analyzer
	Name: #SS_ANALYZER_NAME
	Description: #SS_ANALYZER_DESC
	Appearance: Analyzer
	Explosion: electrical_spark lasting 0.5
	
	Tags: Anaylzer, Tool, Work:Analyzer, Tool:Analyzer, TimedReload
	Tied To: Science 1, Sensors 0
	
	Available: (Techs.Science.Level > 0)
	Level: ceil(weight(Techs.Science.Level,0.25, Techs.Sensors.Level, 0.75))
	Size: Scale
	HPLevel: Techs.Materials.Level-1 As Level
	Durability: HEALTH_MULT * 50 * Size * pow(HEALTH_CURVE,HPLevel)
	Mass: 60 * Size
	
	Costs: Metals[40 * Size], Electronics[75 * Size], AdvParts[100 * Size]
	Complexity: 2.5
	
	Tick Rate: 10
	
	vSizeImpact: 0.5 + (0.5 * Object.Scale/Scale)
	vTechImpact: if(Techs.Sensors.Level > 0, 1, 0.5)
	vLevelImpact: 0.48 * (1 - decay(pow(LEVEL_GAIN_CURVE, Level),150))
	
	vAnalyzeChance: vTechImpact * ( 0.02 + vLevelImpact )^vSizeImpact
	vPowCost: Size * 15 * decay(pow(LEVEL_GAIN_CURVE,Level),125)
	
	Provides: Analyzer with ScanQuality[vAnalyzeChance], PowCost[vPowCost], Delay[10], Duration[5], Range[35 + pow(Object.Size,0.3)]

	Requires:
		To Run:
			Control[30 * Size]
	
	Hints: Local/AnalysisChance[100 * (1 - (1 - vAnalyzeChance)^5)], Power[-1 * vPowCost * 5 / 10]


System: JumpDrive
	Name: #SS_JUMPDRIVE_NAME
	Description: #SS_JUMPDRIVE_DESC
	Appearance: Jumpdrive
	Explosion: antimatter_boom_heavy centered lasting 1.0
	
	Tags: Jump Drive, Tool:Jump Drive, TimedReload
	Tied To: WarpPhysics 5
	
	Available: (Techs.WarpPhysics.Level > 4) || Traits.start_jumpdrives
	realLevel: Techs.WarpPhysics.Level - 4
	Level: if(Traits.start_jumpdrives, max(Techs.WarpPhysics.Level - 4, 3), Techs.WarpPhysics.Level - 4)
	Size: Scale
	HPLevel: Techs.Materials.Level-1 As Level
	Durability: HEALTH_MULT * 100 * Size * pow(HEALTH_CURVE,HPLevel)
	Mass: 300 * Size
	
	Costs: Metals[250 * Size], Electronics[250 * Size], AdvParts[250 * Size]
	Complexity: 2.5
	
	vJumpRangeMin: 1000 * decay(Level, 250)
	vJumpRange: progress(5000 + (Size * 50),1000 + (Size * 10), pow(LEVEL_GAIN_CURVE, Level)) * sqrt(Scale / Object.Scale)
	vChargeTime: 8 * decay(pow(LEVEL_GAIN_CURVE, Level),250)
	vPowCost: 100 * Size

	Provides: DestructsShip
	
	Provides: JumpDrive with MinRange[vJumpRangeMin], MaxRange[vJumpRange],
		ChargeupTime[vChargeTime], PowCost[vPowCost]

	Requires:
		To Run:
			Control[50 * Size]
	
	Hints: Power[-1 * vPowCost], Local/ChargeTime[vChargeTime], Local/JumpMinDist[vJumpRangeMin / 1000], Local/JumpMaxDist[vJumpRange / 1000]


System: ExternalMount
	Name: #SS_EXTERNALMOUNT_NAME
	Description: #SS_EXTERNALMOUNT_DESC
	Appearance: ExternalMount
	Explosion: small_explosion lasting 0.5

	Tags: NegatesSpace, IgnoresScale, Link
	Tied To: ShipConstruction 4

	Available: Techs.ShipConstruction.Level >= 4
	Level: 1
	Size: Object.Scale
	Mass: 40 * Size

	HPLevel: Techs.Materials.Level-1 As Level
	Durability: 30 * Size * pow(HEALTH_CURVE,HPLevel) * HEALTH_MULT

	Costs: Metals[Size * 275]
	Alters: subSysAlterations::dummyAlter

	PreDamageOrder: -8
	Provides: DamageRedirection
