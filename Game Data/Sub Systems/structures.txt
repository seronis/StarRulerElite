System: SciLab
	Name: #SS_SCILAB_NAME
	Description: #SS_SCILAB_DESC

	Available: true
	Level: max(floor(Techs.Science.Level),0)
	Size: Scale
	Durability: 325 * Size * pow(LEVEL_GAIN_CURVE, Level)
	Mass: 500 * Size * pow(COST_INC_CRV, Level)

	Tags: Structure
	Tied To: Science 0

	Costs: Metals[200 * Size * pow(COST_INC_CRV, Level)], Electronics[150 * Size * pow(COST_INC_CRV, Level)], AdvParts[150 * Size * pow(COST_INC_CRV, Level)], Labr[BLDG_LABR_MULT * 5 * Size * pow(COST_INC_CRV, Level)]
	Complexity: 1

	vResRate: Size * 20 * pow(RES_GAIN_CURVE, Level)
	vWorkers: Size * 600000

	Provides: Research with
		Amount[vResRate]

	Requires:
		To Run:
			Workers[vWorkers]

	Hints: Research[vResRate], Workers[vWorkers * -1]


System: MetalMine
	Name: #SS_METALMINE_NAME
	Description: #SS_METALMINE_DESC

	Available: true
	Level: max(floor(Techs.Metallurgy.Level),0)
	Size: Scale
	Durability: 455 * Size * pow(LEVEL_GAIN_CURVE, Level)
	Mass: 500 * Size * pow(COST_INC_CRV, Level)

	Tags: Structure
	Tied To: Metallurgy 0

	Costs: Metals[420 * Size * pow(COST_INC_CRV, Level)], Electronics[50 * Size * pow(COST_INC_CRV, Level)], AdvParts[30 * Size * pow(COST_INC_CRV, Level)], Labr[BLDG_LABR_MULT * 5 * Size * pow(COST_INC_CRV, Level)]
	Complexity: 5

	vMineRate: Size * 14 * (pow(LEVEL_GAIN_CURVE, Level) + RES_BASE_FACT) * RES_GEN_MULT
	vMtlStore: Size * 250 * pow(LEVEL_GAIN_CURVE, Level)
	vWorkers: Size * 800000

	Provides: NeedWorkers with
		Workers[vWorkers]

	Provides: StorageOres with
		Amount[vMineRate*10]

	Provides: StorageMetl with
		Amount[vMtlStore]

	Provides: DeepOreMining with
		Rate[vMineRate]

	Provides: MetlSmelting with
		Rate[vMineRate]

	Hints: OresGen[vMineRate], OresStore[vMineRate*10], MetlGen[vMineRate], MetlStore[vMtlStore], Workers[vWorkers * -1]


System: ElectronicFact
	Name: #SS_ELECTFACT_NAME
	Description: #SS_ELECTFACT_DESC

	Available: true
	Level: max(floor(Techs.Metallurgy.Level),0)
	Size: Scale
	Durability: 420 * Size * pow(LEVEL_GAIN_CURVE, Level)
	Mass: 500 * Size * pow(COST_INC_CRV, Level)

	Tags: Structure
	Tied To: Metallurgy 0

	Costs: Metals[340 * Size * pow(COST_INC_CRV, Level)], Electronics[100 * Size * pow(COST_INC_CRV, Level)], AdvParts[60 * Size * pow(COST_INC_CRV, Level)], Labr[BLDG_LABR_MULT * 5 * Size * pow(COST_INC_CRV, Level)]
	Complexity: 5

	vElecFab: Size * 2.7 * (pow(LEVEL_GAIN_CURVE, Level) + RES_BASE_FACT) * RES_GEN_MULT
	vElecStore: Size * 100 * pow(LEVEL_GAIN_CURVE, Level)
	vWorkers: Size*600000

	Provides: NeedWorkers with
		Workers[vWorkers]

	Provides: StorageElec with
		Amount[vElecStore]

	Provides: BuildElectronics with
		Rate[vElecFab]

	Hints: ElecGen[vElecFab], ElecStore[vElecStore], Workers[vWorkers * -1]


System: AdvPartFact
	Name: #SS_ADVFACT_NAME
	Description: #SS_ADVFACT_DESC

	Available: true
	Level: max(floor(Techs.Metallurgy.Level),0)
	Size: Scale
	Durability: 365 * Size * pow(LEVEL_GAIN_CURVE, Level)
	Mass: 500 * Size * pow(COST_INC_CRV, Level)

	Tags: Structure
	Tied To: Metallurgy 0

	Costs: Metals[260 * Size * pow(COST_INC_CRV, Level)], Electronics[150 * Size * pow(COST_INC_CRV, Level)], AdvParts[90 * Size * pow(COST_INC_CRV, Level)], Labr[BLDG_LABR_MULT * 5 * Size * pow(COST_INC_CRV, Level)]
	Complexity: 5

	vAdvFab: Size * 2 * (pow(LEVEL_GAIN_CURVE, Level) + RES_BASE_FACT) * RES_GEN_MULT
	vAdvStore: Size * 50 * pow(LEVEL_GAIN_CURVE, Level)
	vWorkers: Size * 400000

	Provides: NeedWorkers with
		Workers[vWorkers]

	Provides: StorageAdvp with
		Amount[vAdvStore]

	Provides: BuildAdvParts with
		Rate[vAdvFab]

	Hints: AdvpGen[vAdvFab], AdvpStore[vAdvStore], Workers[vWorkers * -1]


System: GoodsFactory
	Name: #SS_GOODSFACT_NAME
	Description: #SS_GOODSFACT_DESC

	Available: (floor(Techs.Economics.Level) > 1) || not(Traits.forever_indifferent)
	Level:  max(floor(Techs.Economics.Level) , 0)
	Size: Scale
	Durability: 395 * Size * pow(LEVEL_GAIN_CURVE, Level)
	Mass: 500 * Size * pow(COST_INC_CRV, Level)

	Tags: Structure
	Tied To: Economics 0

	Costs: Metals[290 * Size * pow(COST_INC_CRV, Level)], Electronics[150 * Size * pow(COST_INC_CRV, Level)], AdvParts[60 * Size * pow(COST_INC_CRV, Level)], Labr[BLDG_LABR_MULT * 5 * Size * pow(COST_INC_CRV, Level)]
	Complexity: 5

	vWorkers: Size * 800000
	vGoodsFab: Size * 92 * pow(LEVEL_GAIN_CURVE, Level)

	Provides: NeedWorkers with
		Workers[vWorkers]

	Provides: StorageGuds with
		Amount[vGoodsFab*10]

	Provides: MakeGoods with
		Rate[vGoodsFab]

	Hints: GudsGen[vGoodsFab], GudsStore[vGoodsFab*10], Workers[vWorkers * -1]


System: LuxsFactory
	Name: #SS_LUXSFACT_NAME
	Description: #SS_LUXSFACT_DESC

	Available: (floor(Techs.Economics.Level) > 1) || not(Traits.forever_indifferent)
	Level:  max(floor(Techs.Economics.Level) , 0)
	Size: Scale
	Durability: 380 * Size * pow(LEVEL_GAIN_CURVE, Level)
	Mass: 500 * Size * pow(COST_INC_CRV, Level)

	Tags: Structure
	Tied To: Economics 0

	Costs: Metals[280 * Size * pow(COST_INC_CRV, Level)], Electronics[160 * Size * pow(COST_INC_CRV, Level)], AdvParts[60 * Size * pow(COST_INC_CRV, Level)], Labr[BLDG_LABR_MULT * 5 * Size * pow(COST_INC_CRV, Level)]
	Complexity: 5

	vLuxFab: Size * 5 * pow(LEVEL_GAIN_CURVE, Level)
	vWorkers: Size * 400000

	Provides: NeedWorkers with
		Workers[vWorkers]

	Provides: StorageLuxs with
		Amount[vLuxFab*10]

	Provides: MakeLuxuries with
		Rate[vLuxFab]

	Hints: LuxsGen[vLuxFab], LuxsStore[vLuxFab*10], Workers[vWorkers * -1]


System: City
	Name: #SS_CITY_NAME
	Description: #SS_CITY_DESC

	Available: true
	Level: max(floor(Techs.Sociology.Level),0)
	Size: Scale
	Durability: 380 * Size * pow(LEVEL_GAIN_CURVE, Level)
	Mass: 500 * Size * pow(COST_INC_CRV, Level)

	Tags: Structure
	Tied To: Sociology 0

	Costs: Metals[280 * Size * pow(COST_INC_CRV, Level)], Electronics[160 * Size * pow(COST_INC_CRV, Level)], AdvParts[60 * Size * pow(COST_INC_CRV, Level)], Labr[BLDG_LABR_MULT * 5 * Size * pow(COST_INC_CRV, Level)]
	Complexity: 2

	vGudStore: Size * 32 * pow(LEVEL_GAIN_CURVE, Level)
	vLuxStore: Size * 32 * pow(LEVEL_GAIN_CURVE, Level)
	
	vHousing: Size * 2000000 * pow(0.5 + LEVEL_GAIN_CURVE / 2, Level)
	vLaborPool: Size * 1.0 * pow(0.5 + LEVEL_GAIN_CURVE / 2, Level)
	vFoodReq: vHousing * 0.00000006

	Provides: Housing with
		Amount[vHousing]

	Provides: StorageFood with
		Amount[vFoodReq*30]

	Provides: StorageGuds with
		Amount[vGudStore]

	Provides: StorageLuxs with
		Amount[vLuxStore]

	Provides: LaborPool with Amount[vLaborPool]

	Provides: DamageResistance with Amount[pow(LEVEL_GAIN_CURVE, Level) * 1.25 * Size]

	Hints: Housing[vHousing], LaborPool[vLaborPool], FoodStore[vFoodReq*30]


System: Bunker
	Name: #SS_BUNKER_NAME
	Description: #SS_BUNKER_DESC

	Available: (floor(Techs.Armor.Level) > 1) && (floor(Techs.Sociology.Level) > 1)
	Level:  max(floor(Techs.Armor.Level),floor(Techs.Sociology.Level))
	Size: Scale
	Durability: 3*970 * Size * pow(LEVEL_GAIN_CURVE, Level) * GAME_ARMOR_MULT
	Mass: 1000 * Size * pow(COST_INC_CRV, Level)

	Tags: Structure
	Tied To: Armor 2, Sociology 2

	Costs: Metals[945 * Size * pow(COST_INC_CRV, Level)], Electronics[40 * Size * pow(COST_INC_CRV, Level)], AdvParts[15 * Size * pow(COST_INC_CRV, Level)], Labr[BLDG_LABR_MULT * 10 * Size * pow(COST_INC_CRV, Level)]
	Complexity: 2

	vHousing: Size * 600000 * pow(0.5 + LEVEL_GAIN_CURVE / 2, Level)
	vLaborPool: Size * 0.3 * pow(0.5 + LEVEL_GAIN_CURVE / 2, Level)
	vFoodReq: vHousing * 0.00000006
	vSoakDamage: Size * 25 * pow(LEVEL_GAIN_CURVE, Level)

	Provides: SoakDamage with
		Amount[vSoakDamage]

	Provides: Housing with
		Amount[vHousing]

	Provides: StorageFood with Amount[vFoodReq*600]

	Provides: LaborPool with Amount[vLaborPool]

	Provides: DamageResistance with Amount[pow(LEVEL_GAIN_CURVE, Level) * 2.5 * Size]

	Hints: Housing[vHousing], LaborPool[vLaborPool], Soak[vSoakDamage], FoodStore[vFoodReq*600]


System: Capital
	Name: #SS_CAPITAL_NAME
	Description: #SS_CAPITAL_DESC

	Available: true
	Level: max(floor(Techs.Sociology.Level),0)
	Size: Scale
	Durability: 2 * 870 * Size * pow(LEVEL_GAIN_CURVE, Level)
	Mass: 1000 * Size * pow(COST_INC_CRV, Level)

	Tags: Structure, Unique, Capital, Unique:Capital
	Tied To: Sociology 0

	Costs: Metals[770 * Size * pow(COST_INC_CRV, Level)], Electronics[140 * Size * pow(COST_INC_CRV, Level)], AdvParts[90 * Size * pow(COST_INC_CRV, Level)], Labr[BLDG_LABR_MULT * 10 * Size * pow(COST_INC_CRV, Level)]
	Complexity: 1

	vCapSupport: Size * 10 * pow(LEVEL_GAIN_CURVE, Level)
	vStorage: Size * 250 * Level

	vTrade: Size * 3 * pow(LEVEL_GAIN_CURVE, Level) * TRADE_RATE_MULT

	vHousing: Size * 600000 * pow(0.5 + LEVEL_GAIN_CURVE / 2, Level)
	vLaborPool: Size * 0.3 * pow(0.5 + LEVEL_GAIN_CURVE / 2, Level)
	vFoodReq: vHousing * 0.00000006

	Provides: Housing with
		Amount[vHousing]

	Provides: Trade with
		Rate[vTrade]

	Provides: StorageFood with Amount[500 + vFoodReq * 60]

	Provides: StorageMetl with
		Amount[vStorage * 0.5]

	Provides: StorageElec with
		Amount[vStorage * 0.3]

	Provides: StorageAdvp with
		Amount[vStorage * 0.2]

	Provides: Repair with Rate[Durability / 120]

	Provides: LaborPool with Amount[vLaborPool]

	Provides: PopEconomy

	Provides: DamageResistance with Amount[pow(LEVEL_GAIN_CURVE, Level) * 1.25 * Size]

	Provides: CapitalSupport with Metals[vCapSupport * 0.5], Electronics[vCapSupport * 0.3], AdvParts[vCapSupport * 0.2], Food[vFoodReq]

	Hints: Housing[vHousing], TradeRate[vTrade], MetlGen[vCapSupport * 0.5], ElecGen[vCapSupport * 0.3], AdvpGen[vCapSupport * 0.2], FoodGen[vFoodReq]


System: GalacticCapital
	Name: #SS_GLXCAPITAL_NAME
	Description: #SS_GLXCAPITAL_DESC

	Available: true
	Level: max(floor(Techs.Sociology.Level),0)
	Size: Scale
	Durability: 2 * 870 * Size * pow(LEVEL_GAIN_CURVE, Level)
	Mass: 1000 * Size * pow(COST_INC_CRV, Level)

	Tags: Structure, Unique, Capital, Unique:Capital
	Tied To: Sociology 0

	Costs: Metals[770 * Size * pow(COST_INC_CRV, Level)], Electronics[140 * Size * pow(COST_INC_CRV, Level)], AdvParts[90 * Size * pow(COST_INC_CRV, Level)], Labr[BLDG_LABR_MULT * 10 * Size * pow(COST_INC_CRV, Level)]
	Complexity: 1

	vCapSupport: Size * 10 * pow(LEVEL_GAIN_CURVE, Level)
	vStorage: Size * 250 * Level

	vTrade: Size * 3 * pow(LEVEL_GAIN_CURVE, Level) * TRADE_RATE_MULT

	vHousing: Size * 600000 * pow(0.5 + LEVEL_GAIN_CURVE / 2, Level)
	vLaborPool: Size * 0.3 * pow(0.5 + LEVEL_GAIN_CURVE / 2, Level)
	vFoodReq: vHousing * 0.00000006

	Provides: Housing with
		Amount[vHousing]

	Provides: Trade with
		Rate[vTrade]

	Provides: StorageFood with Amount[500 + vFoodReq * 60]

	Provides: StorageMetl with
		Amount[vStorage * 0.5]

	Provides: StorageElec with
		Amount[vStorage * 0.3]

	Provides: StorageAdvp with
		Amount[vStorage * 0.2]

	Provides: Repair with Rate[Durability / 120]

	Provides: LaborPool with Amount[vLaborPool]

	Provides: PopEconomy

	Provides: DamageResistance with Amount[pow(LEVEL_GAIN_CURVE, Level) * 1.25 * Size]

	Provides: CapitalSupport with Metals[vCapSupport * 0.5], Electronics[vCapSupport * 0.3], AdvParts[vCapSupport * 0.2], Food[vFoodReq]

	Hints: Housing[vHousing], TradeRate[vTrade], MetlGen[vCapSupport * 0.5], ElecGen[vCapSupport * 0.3], AdvpGen[vCapSupport * 0.2], FoodGen[vFoodReq]


System: Farm
	Name: #SS_FARM_NAME
	Description: #SS_FARM_DESC

	Available: (floor(Techs.Biology.Level) > 1) || not(Traits.no_food)
	Level:  max(floor(Techs.Biology.Level) , 0)
	Size: Scale
	Durability: 430 * Size * pow(LEVEL_GAIN_CURVE, Level)
	Mass: 500 * Size * pow(COST_INC_CRV, Level)

	Tags: Structure
	Tied To: Biology 0

	Costs: Metals[380 * Size * pow(COST_INC_CRV, Level)], Electronics[60 * Size * pow(COST_INC_CRV, Level)], AdvParts[60 * Size * pow(COST_INC_CRV, Level)], Labr[BLDG_LABR_MULT * 5 * Size * pow(COST_INC_CRV, Level)]
	Complexity: 1

	vFoodStore: Size * 12 * pow(LEVEL_GAIN_CURVE, Level)
	vFoodGen: Size * .6 * pow(LEVEL_GAIN_CURVE, Level)
	vWorkers: Size * 600000

	Provides: MakeFood with
		Rate[vFoodGen]

	Provides: StorageFood with
		Amount[vFoodStore]

	Provides: NeedWorkers with
		Workers[vWorkers]

	Hints: Workers[vWorkers * -1], FoodGen[vFoodGen], FoodStore[vFoodStore]


System: PlanetCannon
	Name: #SS_PLANETCANNON_NAME
	Description: #SS_PLANETCANNON_DESC

	Available: floor(Techs.ProjWeapons.Level) > 0
	Level: max(floor(Techs.ProjWeapons.Level) , 0)
	Size: Scale
	Durability: 1240 * Size * pow(LEVEL_GAIN_CURVE, Level)
	Mass: 1500 * Size * pow(COST_INC_CRV, Level)

	Tags: Structure, Weapon
	Tied To: ProjWeapons 1

	Costs: Metals[1040 * Size * pow(COST_INC_CRV, Level)], Electronics[280 * Size * pow(COST_INC_CRV, Level)], AdvParts[180 * Size * pow(COST_INC_CRV, Level)], Labr[BLDG_LABR_MULT * 15 * Size * pow(COST_INC_CRV, Level)]
	Complexity: 1

	vDamage: Size * 300 * pow(LEVEL_GAIN_CURVE, Level) * GAME_DAMAGE_MULT
	vDelay: max(4, 10 * decay(pow(LEVEL_GAIN_CURVE,Level),50))
	vDeviation: 0.1
	vRange: 20 * Size
	vWorkers: Size*300000

	Provides: ProjWeapon with Damage[vDamage],
				Delay[vDelay], AmmoUse[0], Range[vRange], Speed[40],
				Deviation[vDeviation]

	Requires:
		To Run:
			Workers[vWorkers]

	Hints: Workers[vWorkers * -1], DPS[vDamage / vDelay], Range[vRange]


System: PlanetLaser
	Name: #SS_PLANETLASER_NAME
	Description: #SS_PLANETLASER_DESC

	Available: floor(Techs.BeamWeapons.Level) > 0
	Level: max(floor(Techs.BeamWeapons.Level) , 0)
	Size: Scale
	Durability: 1240 * Size * pow(LEVEL_GAIN_CURVE, Level)
	Mass: 1500 * Size * pow(COST_INC_CRV, Level)

	Tags: Structure, Weapon
	Tied To: BeamWeapons 1

	Costs: Metals[1040 * Size * pow(COST_INC_CRV, Level)], Electronics[280 * Size * pow(COST_INC_CRV, Level)], AdvParts[180 * Size * pow(COST_INC_CRV, Level)], Labr[BLDG_LABR_MULT * 15 * Size * pow(COST_INC_CRV, Level)]
	Complexity: 1

	vDamage: Size * 150 * pow(LEVEL_GAIN_CURVE, Level) * GAME_DAMAGE_MULT
	vDelay: max(4, 10 * decay(pow(LEVEL_GAIN_CURVE,Level),50))
	vDuration: 3
	vRange: 15 * Size
	vWorkers: Size*300000
	vDeviation: 0.1

	//50% more damage than a planet cannon, but spread over 3 seconds (suffers more damage soak)
	Provides: NarrowEnergyWeapon with Damage[vDamage], Duration[vDuration],
				Delay[vDelay], PowCost[0], Range[vRange], Deviation[vDeviation]

	Requires:
		To Run:
			Workers[vWorkers]

	Hints: Workers[vWorkers * -1], DPS[vDuration * vDamage / vDelay], Range[vRange]


System: PlanetShields
	Name: #SS_PLANETSHIELDS_NAME
	Description: #SS_PLANETSHIELDS_DESC

	Available: floor(Techs.Shields.Level) > 0
	Level: max(floor(Techs.Shields.Level) , 0)
	Size: Scale
	Durability: 1240 * Size * pow(LEVEL_GAIN_CURVE, Level)
	Mass: 1500 * Size * pow(COST_INC_CRV, Level)

	Tags: Structure, Weapon
	Tied To: Shields 1

	Costs: Metals[1040 * Size * pow(COST_INC_CRV, Level)], Electronics[280 * Size * pow(COST_INC_CRV, Level)], AdvParts[180 * Size * pow(COST_INC_CRV, Level)], Labr[BLDG_LABR_MULT * 15 * Size * pow(COST_INC_CRV, Level)]
	Complexity: 1

	vShields: Size * 2000 * pow(LEVEL_GAIN_CURVE, Level) * GAME_SHIELD_MULT
	vShieldReg: Size * 100 * pow(LEVEL_GAIN_CURVE, Level) * GAME_SHIELD_REG_MULT

	Provides: Shields with
		Amount[vShields],
		Absorption[2]

	Provides: ShieldRegen with
		Rate[vShieldReg],
		Cost[0]

	Hints: Shield[vShields], ShieldReg[vShieldReg]


System: SpacePort
	Name: #SS_SPACEPORT_NAME
	Description: #SS_SPACEPORT_DESC

	Available: floor(Techs.Economics.Level) > 0
	Level: max(floor(Techs.Economics.Level) , 0)
	Size: Scale
	Durability: 370 * Size * pow(LEVEL_GAIN_CURVE, Level)
	Mass: 500 * Size * pow(COST_INC_CRV, Level)

	Tags: Structure, ShipBay
	Tied To: Economics 1

	Costs: Metals[270 * Size * pow(COST_INC_CRV, Level)], Electronics[140 * Size * pow(COST_INC_CRV, Level)], AdvParts[90 * Size * pow(COST_INC_CRV, Level)], Labr[BLDG_LABR_MULT * 5 * Size * pow(COST_INC_CRV, Level)]
	Complexity: 1

	vEcoStore: Size * 5 * pow(LEVEL_GAIN_CURVE, Level)
	vTrade: Size * 10 * pow(LEVEL_GAIN_CURVE, Level) * TRADE_RATE_MULT
	vWorkers: Size * 600000
	vShipBay: Size * 40 * pow(LEVEL_GAIN_CURVE, Level)

	Provides: Trade with
		Rate[vTrade]

	Provides: ShipStorage with
		Amount[vShipBay]

	Provides: MakeBioFuel with
		Rate[Size * 0.2 * pow(LEVEL_GAIN_CURVE, Level)],
		FoodCostPer[0.5]

	Provides: StorageFuel with
		Amount[Size * 100 * pow(LEVEL_GAIN_CURVE, Level)]

	Provides: StorageMetl with
		Amount[vEcoStore * 0.5]

	Provides: StorageElec with
		Amount[vEcoStore * 0.3]

	Provides: StorageAdvp with
		Amount[vEcoStore * 0.2]

	Provides: NeedWorkers with
		Workers[vWorkers]

	Hints: Workers[vWorkers * -1], ShipBay[vShipBay], TradeRate[vTrade]


System: ShipYard
	Name: #SS_SHIPYARD_NAME
	Description: #SS_SHIPYARD_DESC

	Available: true
	Level: max(floor(Techs.ShipConstruction.Level),0)
	Size: Scale
	Durability: 370 * Size * pow(LEVEL_GAIN_CURVE, Level)
	Mass: 500 * Size * pow(COST_INC_CRV, Level)

	Tags: Structure, ShipBay, BuildsShips
	Tied To: ShipConstruction 0

	Costs: Metals[270 * Size * pow(COST_INC_CRV, Level)], Electronics[140 * Size * pow(COST_INC_CRV, Level)], AdvParts[90 * Size * pow(COST_INC_CRV, Level)], Labr[BLDG_LABR_MULT * 5 * Size * pow(COST_INC_CRV, Level)]
	Complexity: 1

	vEcoStore: Size * 250 * (2 - decay(pow(LEVEL_GAIN_CURVE,Level), 45))
	vWorkers: Size * 1200000
	vShipBay: Size * 10 * pow(LEVEL_GAIN_CURVE, Level)
	vLaborPool: Size * 6 * pow(LEVEL_GAIN_CURVE, Level)
	vLabor: Size * 3 * pow(LEVEL_GAIN_CURVE, Level)

	Provides: AutoLabor with
		Rate[vLabor], Store[vLaborPool]

	Provides: StorageAdvp with
		Amount[vEcoStore * 0.2]

	Provides: StorageElec with
		Amount[vEcoStore * 0.3]

	Provides: StorageMetl with
		Amount[vEcoStore * 0.5]

	Provides: ShipStorage with
		Amount[vShipBay]

	Provides: MakeBioFuel with
		Rate[Size * 0.2 * pow(LEVEL_GAIN_CURVE, Level)],
		FoodCostPer[0.2*decay(Level,5)]

	Provides: StorageFuel with
		Amount[Size*100 * pow(LEVEL_GAIN_CURVE, Level)]

	Provides: MakeAmmo with
		Rate[Size * 0.2 * pow(LEVEL_GAIN_CURVE, Level)],
		MetalCostPer[0.2*decay(Level,5)]

	Provides: StorageAmmo with
		Amount[Size * 100 * pow(LEVEL_GAIN_CURVE, Level)]

	Requires:
		To Run:
			Workers[vWorkers]

	Hints: Workers[vWorkers * -1], ShipBay[vShipBay], LaborPool[vLaborPool], LaborGen[vLabor]


System: ShipPartsYard
	Name: #SS_SHIPPARTSYARD_NAME
	Description: #SS_SHIPPARTSYARD_DESC

	Available: (floor(Techs.ShipConstruction.Level)>1) && (floor(Techs.Cargo.Level)>1)
	Level: floor(weight(Techs.ShipConstruction.Level, 0.5, Techs.Cargo.Level, 0.5))
	Size: Scale
	Durability: 360 * Size * pow(LEVEL_GAIN_CURVE, Level)
	Mass: 500 * Size * pow(COST_INC_CRV, Level)

	Tags: Structure, ShipBay, BuildsShips
	Tied To: ShipConstruction 2, Cargo 2

	Costs: Metals[260 * Size * pow(COST_INC_CRV, Level)], Electronics[120 * Size * pow(COST_INC_CRV, Level)], AdvParts[120 * Size * pow(COST_INC_CRV, Level)], Labr[BLDG_LABR_MULT * 5 * Size * pow(COST_INC_CRV, Level)]
	Complexity: 1

	vEcoStore: Size * 500 * (2 - decay(Level,5))
	vWorkers: Size * 1200000
	vLaborPool: Size * 18 * pow(1+((LEVEL_GAIN_CURVE-1)*1.25), Level)
	vLabor: Size * 2 * pow(1+((LEVEL_GAIN_CURVE-1)/2), Level)

	Provides: AutoLabor with
		Rate[vLabor], Store[vLaborPool]

	Provides: StorageAdvp with
		Amount[vEcoStore * 0.25]

	Provides: StorageElec with
		Amount[vEcoStore * 0.30]

	Provides: StorageMetl with
		Amount[vEcoStore * 0.45]

	Requires:
		To Run:
			Workers[vWorkers]

	Hints: Workers[vWorkers * -1], LaborPool[vLaborPool], LaborGen[vLabor]


System: FuelDepot
	Name: #SS_FUELDEPOT_NAME
	Description: #SS_FUELDEPOT_DESC

	Available: true
	Level: max(floor(Techs.Chemistry.Level),floor(Techs.Propulsion.Level))
	Size: Scale
	Durability: 430 * Size * pow(LEVEL_GAIN_CURVE, Level)
	Mass: 500 * Size * pow(COST_INC_CRV, Level)

	Tags: Structure
	Tied To: Chemistry 0, Propulsion 0

	Costs: Metals[380 * Size * pow(COST_INC_CRV, Level)], Electronics[60 * Size * pow(COST_INC_CRV, Level)], AdvParts[60 * Size * pow(COST_INC_CRV, Level)], Labr[BLDG_LABR_MULT * 5 * Size * pow(COST_INC_CRV, Level)]
	Complexity: 1

	vWorkers: Size * 600000
	vFuelStore: Size * 750 * pow(LEVEL_GAIN_CURVE, Level)
	vFuelGen: Size * 20 * pow(LEVEL_GAIN_CURVE, Level)

	Provides: MakeBioFuel with
		Rate[vFuelGen],
		FoodCostPer[0.5]

	Provides: StorageFuel with
		Amount[vFuelStore]

	Requires:
		To Run:
			Workers[vWorkers]

	Hints: FuelGen[vFuelGen], FuelStore[vFuelStore], FoodCost[vFuelGen * -0.5], Workers[vWorkers * -1]


System: AmmoDepot
	Name: #SS_AMMODEPOT_NAME
	Description: #SS_AMMODEPOT_DESC

	Available: true
	Level: max(floor(Techs.Missiles.Level),floor(Techs.ProjWeapon.Level))
	Size: Scale
	Durability: 430 * Size * pow(LEVEL_GAIN_CURVE, Level)
	Mass: 500 * Size * pow(COST_INC_CRV, Level)

	Tags: Structure
	Tied To: Missiles 0, ProjWeapon 0

	Costs: Metals[380 * Size * pow(COST_INC_CRV, Level)], Electronics[60 * Size * pow(COST_INC_CRV, Level)], AdvParts[60 * Size * pow(COST_INC_CRV, Level)], Labr[BLDG_LABR_MULT * 5 * Size * pow(COST_INC_CRV, Level)]
	Complexity: 1

	vWorkers: Size * 600000
	vAmmoStore: Size * 750 * pow(LEVEL_GAIN_CURVE, Level)
	vAmmoGen: Size * 20 * pow(LEVEL_GAIN_CURVE, Level)

	Provides: MakeAmmo with
		Rate[vAmmoGen],
		MetalCostPer[0.5]

	Provides: StorageAmmo with
		Amount[vAmmoStore]

	Requires:
		To Run:
			Workers[vWorkers]

	Hints: AmmoGen[vAmmoGen], AmmoStore[vAmmoStore], MetlCost[vAmmoGen / -2], FuelCost[vAmmoGen / -2], Workers[vWorkers * -1]


System: CargoBlock
	Name: #SS_CARGOBLOCK_NAME
	Description: #SS_CARGOBLOCK_DESC

	Available: true
	Level: max(floor(Techs.Cargo.Level),0)
	Size: Scale
	Durability: 205 * Size * pow(LEVEL_GAIN_CURVE, Level)
	Mass: 250 * Size * pow(COST_INC_CRV, Level)

	Tags: Structure
	Tied To: Cargo 0

	Costs: Metals[190 * Size * pow(COST_INC_CRV, Level)], Electronics[30 * Size * pow(COST_INC_CRV, Level)], AdvParts[30 * Size * pow(COST_INC_CRV, Level)], Labr[BLDG_LABR_MULT * Size * 2.5 * pow(COST_INC_CRV, Level)]
	Complexity: 1

	vWorkers: Size * 100000
	vCargoStore: Size * 1000 * pow(LEVEL_GAIN_CURVE, Level)

	Provides: Cargo with
		Amount[vCargoStore / 4]

	Provides: StorageMetl with
		Amount[vCargoStore / 4]

	Provides: StorageElec with
		Amount[vCargoStore / 4]

	Provides: StorageAdvp with
		Amount[vCargoStore / 4]

	Requires:
		To Run:
			Workers[vWorkers]

	Hints: Workers[vWorkers * -1], Cargo[vCargoStore/4], AdvpStore[vCargoStore/4], ElecStore[vCargoStore/4], MetlStore[vCargoStore/4]


System: PlanetEngine
	Name: #SS_PLANETTHRUSTER_NAME
	Description: #SS_PLANETTHRUSTER_DESC

	Available: (floor(Techs.Gravitics.Level) > 15) && (floor(Techs.WarpPhysics.Level) > 11) && (floor(Techs.MegaConstruction.Level) > 0)
	Level: min(floor(Techs.MegaConstruction),floor(weight(Techs.Gravitics.Level,0.5,Techs.WarpPhysics.Level,0.5)))
	Size: Scale
	Durability: 1775 * Size * pow(LEVEL_GAIN_CURVE, Level)
	Mass: 2500 * Size * pow(COST_INC_CRV, Level)

	Tags: Structure
	Tied To: Gravitics 16, WarpPhysics 12, MegaConstruction 1

	Costs: Metals[1225 * Size * pow(COST_INC_CRV, Level)], Electronics[750 * Size * pow(COST_INC_CRV, Level)], AdvParts[525 * Size * pow(COST_INC_CRV, Level)], Labr[BLDG_LABR_MULT * 50 * Size * pow(COST_INC_CRV, Level)]
	Complexity: 1

	vThrust: Size * 4 * 1000000000000 * (2 - decay(pow(LEVEL_GAIN_CURVE,Level),35)) * GAME_THRUST_MULT
	vWorkers: Size * 1200000

	Provides: Propulsion with
		Amount[vThrust]

	Requires:
		To Run:
			Workers[vWorkers]

	Hints: Workers[vWorkers * -1], Thrust[vThrust]

